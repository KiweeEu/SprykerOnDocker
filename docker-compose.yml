version: "3"
services:
  sp_php71:
    image: kiwee:php71
    build: ./docker/php71
    volumes:
      - ./demoshop:/var/www/html
      - ./docker/php71/php-fpm.conf:/usr/local/etc/php-fpm.conf
    networks:
      - backend

  sp_web:
    image: nginx:1.13-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./docker/nginx/spryker:/etc/nginx/spryker
      - .:/var/www/html
    depends_on:
      - sp_php71
    networks:
      - backend

  sp_pgsql:
    image: postgres:9-alpine
    restart: always
    environment:
      - "SPRYKER_DB_USER=spryker"
      - "SPRYKER_DB_PASSWORD=mate20mg"
      - "SPRYKER_DB_DATABASE=spryker"
      - "POSTGRES_PASSWORD=mate20mg"
    volumes:
      - ./docker/postgres/init/01-sprykerdb.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - '5432:5432'
    networks:
      - backend

  sp_es:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.3
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - "http.port=10005"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - sp_esdata:/usr/share/elasticsearch/data
    ports:
      - 10005:10005
    networks:
      - backend

  sp_redis:
    image: redis:3-alpine
    ports:
      - "10009:10009"
    command: redis-server --port 10009
    networks:
      - backend

  sp_jenkins:
    image: kiwee:jenkins
    build: ./docker/jenkins
    ports:
      - "10007:10007"
    volumes:
      - sp_jenkinsdata:/var/jenkins_home
    environment:
      - JENKINS_OPTS="--httpPort=10007"
    networks:
      - backend

  sp_rabbitmq:
    image: rabbitmq:3
    build: ./docker/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER="admin"
      - RABBITMQ_DEFAULT_PASS="mate20mg"
    networks:
      - backend
networks:
  backend:

volumes:
  sp_dbdata:
  sp_appdata:
  sp_esdata:
  sp_jenkinsdata: